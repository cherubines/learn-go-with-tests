编写测试
编写测试和函数很类似，其中有一些规则

程序需要编写在 xxx_test.go 文件中

测试函数的命名必须以单词 Test 开始

测试函数只接受一个参数 t *testing.T

现在这些信息足以让我们明白，类型为 *testing.T 的变量 t 是你在测试框架中的 「hook」，所以当你想让测试失败时可以执行 t.Fail() 之类的操作。

我们讨论一些新话题:

if
Go 的 if 语句与其他编程语言非常类似。

声明变量
我们使用 varName := value 的语法声明变量，它允许我们在测试中复用一些值，从而使代码更具可读性。

t.Errorf
我们调用 t 的 Errorf 方法 打印一条消息并使测试失败。f 表示格式化，它允许我们构建一个字符串，并将值插入占位符值 %q 中。当你的测试失败时，它能够让你清楚是什么错误导致的。

您可以在 fmt go doc 中阅读关于占位符字符串的更多信息。对于测试，%q 非常有用，因为它将值括在双引号中。

后面我们将探讨方法和函数之间的区别。


t.Helper() 需要告诉测试套件这个方法是辅助函数。通过这样做，当测试失败时所报告的行号将在 函数调用中 而不是在辅助函数内部。这将帮助其他开发人员更容易地跟踪问题。如果你仍然不理解，请注释掉它，使测试失败并观察测试输出。

